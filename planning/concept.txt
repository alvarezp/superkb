The idea behind superkb is to use the Super_R and Super_L keys to control
the most basic aspects of a GUI, namely launchers and window actions, thus
making Linux a lot more keyboard-friendly.

It is also under the concept that those Windows keys should be renamed as
"Menu", so new users don't feel afraid of pressing it. This idea should
make Linux more new-user-friendly.

See "idea.txt" for a description of how should superkb work.

Q. Which Window Manager should superkb work with?
A. The program should work either standalone or integrated with a WM. It
should be modularly programmed so it can be easily incorporated to any
desktop environment, GNOME, KDE, XFCE.

Q. How do you expect to do that?
A. If compiled standalone, superkb will just be a launcher. WM controls
might work if the underlying WM has a command for remote controlling.
Otherwise, superkb will be programmed as if it were a library. Indeed,
the code for standalone compilation will be put separately, as if it were
a client. The code will allow easy pluggin for any widget toolkit, etc.
It is supposed to compile with -DGNOME or -DKDE or -DXFCE or -DMOTIF or
-DSTANDALONE or -DENLIGHTENMENT or whatever. Except for standalone, the
output should be an object for static compilation with the window manager.

I don't really know how to program with GTK+ or Qt, so I will try to make
the standalone version with libpng or whatever other libraries are needed.

Superkb is inspired in xbindkeys, but there are several differences with
it, as what the method is to grab the keyboard, and that superkb will only
work for the Super_L and Super_R keys.

